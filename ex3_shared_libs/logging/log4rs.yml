# Scan this file for changes every 30 seconds
refresh_rate: 30 seconds

appenders:
  # An appender named "stdout" that writes to stdout
  stdout:
    kind: console

  # An appender named "requests" that writes to a rolling file with a custom pattern encoder
  requests:
    kind: rolling_file
    path: "log/requests.log"
    encoder:
      pattern: "{d} - {m}{n}"
    policy:
      # Roll the log file when it exceeds 4KB and keep 5 backups
      # Size can be decided on later
      size:
        limit: 4kb
        drop: old
        count: 10
      # Rotate daily at midnight
      compound:
        size:
          limit: 4kb
        trigger:
          kind: size
          limit: 4kb
        roller:
          kind: fixed_window
          pattern: "log/requests.{}.log"
          base: 1
          count: 10

# Set the default logging level to "warn" and attach the "stdout" appender to the root
root:
  level: warn
  appenders:
    - stdout

loggers:
  # Raise the maximum log level for events sent to the "app::backend::db" logger to "info"
  app::backend::db:
    level: info

  # Route log events sent to the "app::requests" logger to the "requests" appender,
  # and *not* the normal appenders installed at the root
  app::requests:
    level: trace
    appenders:
      - requests
    additive: false
